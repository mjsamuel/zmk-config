/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define LEFT_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33  // left-hand keys
#define RIGHT_KEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33 // right-hand keys

# define COMBO_TERM_MS 50
# define COMBO_LAYERS DEFAULT


&mt {
    quick-tap-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escape_combo {
            bindings = <&kp ESC>;
            key-positions = <11 12>;
        };

        left_bracket_combo {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <7 6>;
        };

        left_paran_combo {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <17 16>;
        };

        right_paran_combo {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <17 18>;
        };

        alt_tab_combo {
            bindings = <&kp LA(TAB)>;
            key-positions = <12 13>;
        };

        right_bracket_combo {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        quote_combo {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <26 27>;
        };
    };

    macros {
        quick_lock: quick_lock {
            compatible = "zmk,behavior-macro";
            label = "QUICK_LOCK";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(Q)) &kp ESCAPE>;
            wait-ms = <100>;
        };
    };

    behaviors {
        hrm_l: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <RIGHT_KEYS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hrm_r: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <LEFT_KEYS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                &kp W                  &kp F              &kp P              &kp G      &kp J                     &kp L              &kp U                  &kp Y                    &kp SEMI
&kp A                &kp R                  &kp S              &kp T              &kp D      &kp H                     &kp N              &kp E                  &kp I                    &kp O
&hrm_l LEFT_SHIFT Z  &hrm_l LEFT_CONTROL X  &hrm_l LEFT_ALT C  &hrm_l LEFT_GUI V  &kp B      &kp K                     &hrm_r LEFT_GUI M  &hrm_r LEFT_ALT COMMA  &hrm_r LEFT_CONTROL DOT  &hrm_r LSHFT SLASH
                                                               &lt 1 ENTER        &kp SPACE  &mt LEFT_SHIFT BACKSPACE  &lt 2 TAB
            >;
        };

        LOWER {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &kp DOWN  &kp RIGHT  &trans  &trans  &trans
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &kp LEFT  &trans     &trans  &trans  &trans
&kp F11  &kp F12  &trans  &trans  &trans   &kp UP    &trans     &trans  &trans  &trans
                          &trans  &trans   &trans    &trans
            >;
        };

        RAISE {
            bindings = <
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp AMPERSAND    &kp BACKSLASH   &kp AT_SIGN  &kp ASTERISK  &kp CARET  &kp DOLLAR
&kp PERCENT   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PIPE         &kp TILDE       &kp MINUS    &kp PLUS      &kp EQUAL  &kp GRAVE
&kp HASH      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EXCLAMATION  &kp UNDERSCORE  &trans       &trans        &trans     &trans
                                          &trans        &trans           &trans          &trans
            >;
        };

        ADJUST {
            bindings = <
&quick_lock  &trans  &trans      &trans            &bt BT_SEL 0  &bt BT_SEL 3  &kp C_BRI_DEC  &kp C_BRI_INC  &trans  &trans
&trans       &trans  &kp C_MUTE  &kp C_PLAY_PAUSE  &bt BT_SEL 1  &bt BT_SEL 4  &kp C_VOL_DN   &kp C_VOL_UP   &trans  &trans
&trans       &trans  &trans      &trans            &bt BT_SEL 2  &bt BT_CLR    &trans         &trans         &trans  &trans
                                 &trans            &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
};
